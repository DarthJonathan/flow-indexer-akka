akka {
    loglevel = INFO

    http {
        server.preview.enable-http2 = "on"
    }

    actor {
        provider = "cluster"

        serializers {
            jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
        }

        serialization-bindings {
            "dev.lucasgrey.flow.indexer.serializable.JsonSerializable" = jackson-json
        }
    }

      remote {
        artery {
          transport = tcp
          canonical {
            hostname = "127.0.0.1"
            port = 2551
          }
        }
      }

      cluster {
        seed-nodes = [
          "akka://flow-indexer@127.0.0.1:2551",
        ]

        downing-provider-class = "com.swissborg.lithium.DowningProviderImpl"

        sharding {
          number-of-shards = 4
          passivate-idle-entity-after = 1s #15s
          rebalance-interal = 5s # default 10s

          least-shard-allocation-strategy {
            rebalance-absolute-limit = 5 # default 0 - v2.6.10
            rebalance-relative-limit = 0.3 # default 0.1 - v2.6.10
          }
        }
      }

      management {
        http {
          hostname = "127.0.0.1"
          port = 8558
          route-providers-read-only = false
        }
      }

    persistence {
        cassandra {
            journal.keyspace-autocreate = true
            journal.tables-autocreate = true
            journal.keyspace = "flow_indexer"
            session-provider = "akka.stream.alpakka.cassandra.DefaultSessionProvider"
            datastax-java-driver-config = "datastax-java-driver"
        }
        journal.plugin = "akka.persistence.cassandra.journal"

#         journal.plugin = "akka.persistence.journal.inmem"
#         snapshot-store.plugin = "akka.persistence.snapshot-store.local"
#         snapshot-store.local.dir = "target/snapshot"
    }

    projection {
        slick {
            profile = "slick.jdbc.PostgresProfile$"

            db {
                url = "jdbc:postgresql://localhost:5432/flow_indexer"
                user = "postgres"
                password = "postgres"
                driver = "org.postgresql.Driver"

                connectionPool = "HikariCP"
                numThreads = 4
                keepAliveConnection = true
            }

            offset-store {
                schema = "indexer"
                table = "akka_projection_offset_store"
                management-table = "akka_projection_management"
                use-lowercase-schema = true
            }
        }
    }
}

start-height = 46600000
http-port = 8080

flow {
    access-node {
        host = access.mainnet.nodes.onflow.org
        port = 9000
    }
}

datastax-java-driver {
    basic {
        contact-points = [ "localhost:9042"]
        load-balancing-policy.local-datacenter = datacenter1
    }
    advanced {
        auth-provider {
            class = PlainTextAuthProvider
            username = cassandra
            password = cassandra
        }
        reconnect-on-init = true
    }
    profiles {
        akka-persistence-cassandra-profile {
            basic.request.consistency = QUORUM
        }
    }
}

kamon {
  environment.service = "Flow Indexer"
  trace {
    sampler = always
    join-remote-parents-with-same-span-id=true
  }
  zipkin {
      host = "localhost"
      port = 9411
      protocol = http
      include-environment-tags = no
    }
}

com.swissborg.lithium {
  stable-after = 30s
  active-strategy = "static-quorum"
  static-quorum {
    # Minimum number of nodes in the surviving partition.
    quorum-size = 1

    # Only take in account nodes with this role.
    role = ""
  }
}